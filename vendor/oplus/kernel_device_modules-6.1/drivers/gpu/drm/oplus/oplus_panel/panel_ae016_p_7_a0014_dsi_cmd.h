#ifndef PANEL_AE016_P_7_A0014_DSI_CMD_H
#define PANEL_AE016_P_7_A0014_DSI_CMD_H

#define REGFLAG_CMD				0xFFFA
#define REGFLAG_DELAY			0xFFFC
#define REGFLAG_UDELAY			0xFFFB
#define REGFLAG_END_OF_TABLE	0xFFFD

/* Mode Config */
#define MODE_NUM                    3
#define RES_NUM                     (2)
#define MODE_MAPPING_RULE(x)        ((x) % (MODE_NUM))
static enum RES_SWITCH_TYPE res_switch_type = RES_SWITCH_NO_USE;

enum MODE_ID {
	FHD_SDC60 = 0,
	FHD_SDC90 = 1,
	FHD_SDC120 = 2,
};

enum SEED_MODE_ID {
	VIVID = 100,
	EXPERT = 101,
	NATURAL = 102,
};

struct LCM_setting_table {
	unsigned int cmd;
	unsigned int count;
	unsigned char para_list[256];
};

/* ------------------------- initial code start------------------------- */
struct LCM_setting_table init_setting_60Hz[] = {
    //osc
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x01}},
    {REGFLAG_CMD, 42, {0xC3,0xDD,0x06,0x20,0x11,0xFF,0x00,0x06,0x20,0x11,0xFF,0x00,0x07,0x0E,0x20,0x06,0x44,0x19,0x07,0x04,0x18,
                       0x06,0x51,0x13,0x07,0x11,0x18,0x06,0x5C,0x13,0x07,0x11,0x18,0x06,0x5C,0x13,0x07,0x0E,0x20,0x06,0x44,0x19}},
    //page0
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x00}},
    //SOE Always ON
    {REGFLAG_CMD, 2, {0xC3,0x04}},
    //page1
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x01}},
    //VGL Charge Bump Frequence:HS/4
    {REGFLAG_CMD, 2, {0x6F,0x03}},
    {REGFLAG_CMD, 4, {0xB3,0x55,0x55,0x55}},
    //crosstalk
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x08}},
    {REGFLAG_CMD, 2, {0xBF,0x21}},
    {REGFLAG_CMD, 2, {0x6F,0x01}},
    {REGFLAG_CMD, 2, {0xBF,0x88}},
    {REGFLAG_CMD, 2, {0x6F,0x02}},
    {REGFLAG_CMD, 2, {0xBF,0x0A}},
    {REGFLAG_CMD, 2, {0x6F,0x03}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x1E,0x28,0x4E,0x78,0x9C,0xCE,0xE0,0xF8}},
    {REGFLAG_CMD, 2, {0x6F,0x0C}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x00,0x08,0x08,0x0C,0x10,0x14,0x18}},
    {REGFLAG_CMD, 2, {0x6F,0x14}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x03,0x0C,0x10,0x14,0x18,0x1C,0x20}},
    {REGFLAG_CMD, 2, {0x6F,0x1C}},
    {REGFLAG_CMD, 9, {0xBF,0x92,0x9F,0x98,0x98,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x24}},
    {REGFLAG_CMD, 9, {0xBF,0x8A,0xAA,0x8A,0x8A,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x2C}},
    {REGFLAG_CMD, 12, {0xBF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0x37}},
    {REGFLAG_CMD, 12, {0xBF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x30}},
    {REGFLAG_CMD, 2, {0x6F,0x42}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x4A}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x52}},
    {REGFLAG_CMD, 5, {0xBF,0x40,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0x56}},
    {REGFLAG_CMD, 4, {0xBF,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0x59}},
    {REGFLAG_CMD, 3, {0xBF,0x00,0x20}},
    {REGFLAG_CMD, 2, {0x6F,0x5B}},
    {REGFLAG_CMD, 2, {0xBF,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x5C}},
    {REGFLAG_CMD, 10, {0xBF,0x80,0x37,0x41,0x47,0x58,0x71,0x95,0xC2,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x65}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x01,0x03,0x07,0x0F,0x1F,0x3F,0x7F,0xFF}},
    {REGFLAG_CMD, 2, {0x6F,0x72}},
    {REGFLAG_CMD, 2, {0xBF,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x73}},
    {REGFLAG_CMD, 17, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x83}},
    {REGFLAG_CMD, 2, {0xBF,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x84}},
    {REGFLAG_CMD, 7, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x8A}},
    {REGFLAG_CMD, 7, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x90}},
    {REGFLAG_CMD, 3, {0xBF,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0x92}},
    {REGFLAG_CMD, 7, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x98}},
    {REGFLAG_CMD, 6, {0xBF,0x20,0x20,0x20,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x9D}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x14,0x20,0x32,0x40,0x4A,0x54,0x5C,0x5C}},
    {REGFLAG_CMD, 2, {0x6F,0xA6}},
    {REGFLAG_CMD, 3, {0xBF,0x02,0x02}},
    {REGFLAG_CMD, 2, {0x6F,0xA8}},
    {REGFLAG_CMD, 5, {0xBF,0x01,0x20,0x40,0x03}},
    {REGFLAG_CMD, 2, {0x6F,0xAC}},
    {REGFLAG_CMD, 2, {0xBF,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0xAE}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x20,0x40,0x60,0x80,0xA0,0xC0,0xE0,0xF0}},
    {REGFLAG_CMD, 2, {0x6F,0xB7}},
    {REGFLAG_CMD, 2, {0xBF,0x11}},
    {REGFLAG_CMD, 2, {0x6F,0xB8}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x01,0x20,0x40,0x60,0x80,0xA0,0xC0,0xE0}},
    {REGFLAG_CMD, 2, {0x6F,0xC1}},
    {REGFLAG_CMD, 9, {0xBF,0x14,0x14,0x12,0x10,0x0E,0x0C,0x0A,0x08}},
    {REGFLAG_CMD, 2, {0x6F,0xC9}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0xD1}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A}},
    {REGFLAG_CMD, 2, {0x6F,0xDA}},
    {REGFLAG_CMD, 12, {0xBF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0xE5}},
    {REGFLAG_CMD, 12, {0xBF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0xF0}},
    {REGFLAG_CMD, 5, {0xBF,0x40,0x40,0x40,0x40}},
     //DVDD Strong=1V
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x01}},
    {REGFLAG_CMD, 2, {0x6F,0x03}},
    {REGFLAG_CMD, 4, {0xC5,0x00,0x25,0x25}},
    //OSC START
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x31}},
    {REGFLAG_CMD, 3, {0xF8,0x01,0xB9}},
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x15}},
    {REGFLAG_CMD, 3, {0xF8,0x01,0x8C}},
    //OSC END
    {REGFLAG_CMD, 2, {0x5A,0x01}},
    //DDICinternalsetting
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x0A}},
    //POWER on/off sequence optimize
    {REGFLAG_CMD, 6, {0xF6,0x70,0x70,0x70,0x70,0x70}},
    //TE_opt
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x81}},
    {REGFLAG_CMD, 2, {0x6F,0x0D}},
    {REGFLAG_CMD, 2, {0xFB,0x80}},
    //forEM_DT=0condition
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x01}},
    {REGFLAG_CMD, 2, {0xE5,0x00}},
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x81}},
    {REGFLAG_CMD, 2, {0x6F,0x0C}},
    //enable fskip_extend vfp function
    {REGFLAG_CMD, 2, {0xFD,0x08}},
    {REGFLAG_CMD, 2, {0x6F,0x02}},
    //AOD_Wb timing Optimize
    {REGFLAG_CMD, 2, {0xF9,0x84}},
    {REGFLAG_CMD, 2, {0x6F,0x10}},
    //chopper at skip timing adjust
    {REGFLAG_CMD, 2, {0xFB,0x40}},
    //LVDETSkipframe option
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x48}},
    {REGFLAG_CMD, 2, {0xF2,0x00}},
    //source driving optimize
    {REGFLAG_CMD, 2, {0x6F,0x16}},
    {REGFLAG_CMD, 3, {0xF4,0x02,0x74}},
    //for powersaving option
    {REGFLAG_CMD, 2, {0x6F,0x42}},
    {REGFLAG_CMD, 2, {0xF4,0x00}},
    //for powersaving option
    {REGFLAG_CMD, 2, {0x6F,0x49}},
    {REGFLAG_CMD, 2, {0xF2,0x10}},
    //source vporch optimize
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x81}},
    {REGFLAG_CMD, 2, {0x6F,0x05}},
    {REGFLAG_CMD, 3, {0xFE,0x3C,0x3C}},
    //mipi timing
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x82}},
    {REGFLAG_CMD, 2, {0x6F,0x09}},
    {REGFLAG_CMD, 2, {0xF2,0xFF}},
    //MTP optimize
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x04}},
    {REGFLAG_CMD, 2, {0xF2,0x3C}},
    //RM=1,DM=0
    {REGFLAG_CMD, 2, {0x17,0x30}},
    //频率切换 60Hz
    {REGFLAG_CMD, 2, {0x2F,0x03}},
    //GIRONLIRONAPLAutoSwitchOFF
    {REGFLAG_CMD, 3, {0x5F,0x00,0x00}},
    //TEOn
    {REGFLAG_CMD, 2, {0x35,0x00}},
    //normal dbv
    //{REGFLAG_CMD, 3, {0x51,0x0D,0x0B}},
    //{REGFLAG_CMD, 2, {0x6F,0x04}},
    //{REGFLAG_CMD, 3, {0x51,0x03,0xFF}},
    //BCTRL=1,DD=0
    {REGFLAG_CMD, 2, {0x53,0x20}},
    {REGFLAG_CMD, 5, {0x2A,0x00,0x00,0x04,0xF7}},
    {REGFLAG_CMD, 5, {0x2B,0x00,0x00,0x0A,0xEF}},
    //corner on
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x07}},
    {REGFLAG_CMD, 2, {0xC0,0x27}},
    //DSC
    {REGFLAG_CMD, 3, {0x90,0x03,0x43}},
    {REGFLAG_CMD, 19, {0x91,0xAB,0xA8,0x00,0x10,0xC2,0x00,0x02,0x3E,0x01,0xA3,0x00,0x08,0x06,0x67,0x05,0x66,0x10,0xF0}},
    //GC=1
    {REGFLAG_CMD, 2, {0x26,0x00}},
    //Page 8
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x08}},
    {REGFLAG_CMD, 2, {0xBE,0x03}},
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x81}},
    {REGFLAG_CMD, 2, {0x6F,0x0B}},
    {REGFLAG_CMD, 2, {0xFD,0x04}},
    //lhbm mode control begin
    //{REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x02}},
    //{REGFLAG_CMD, 7, {0xD1,0x26,0xFC,0x23,0x8A,0x2D,0x64}},
    {REGFLAG_CMD, 10, {0x88,0x01,0x02,0x7C,0x09,0xF1,0x00,0x00,0x00,0x00}},
    //lhbm mode control end
    //ir drop
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x08}},
    {REGFLAG_CMD, 7, {0xB0,0x11,0x05,0x35,0x19,0x20,0x20}},
    {REGFLAG_CMD, 2, {0x6F,0x07}},
    {REGFLAG_CMD, 8, {0xB0,0x10,0xDC,0x5E,0x32,0x14,0x6E,0xF3}},
    {REGFLAG_CMD, 2, {0x6F,0x0E}},
    {REGFLAG_CMD, 8, {0xB0,0xB6,0xFF,0x20,0x00,0x00,0xE3,0xBF}},
    {REGFLAG_CMD, 2, {0x6F,0x15}},
    {REGFLAG_CMD, 8, {0xB0,0xF0,0xFE,0xF0,0xFF,0x01,0xFA,0x16}},
    {REGFLAG_CMD, 2, {0x6F,0x1C}},
    {REGFLAG_CMD, 5, {0xB0,0xBF,0x80,0xF2,0x17}},
    {REGFLAG_CMD, 1, {0x11}},
    {REGFLAG_DELAY, 120, {} },
    {REGFLAG_CMD, 1, {0x29}},
};

struct LCM_setting_table init_setting_90Hz[] = {
    //osc
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x01}},
    {REGFLAG_CMD, 42, {0xC3,0xDD,0x06,0x20,0x11,0xFF,0x00,0x06,0x20,0x11,0xFF,0x00,0x07,0x0E,0x20,0x06,0x44,0x19,0x07,0x04,0x18,
                       0x06,0x51,0x13,0x07,0x11,0x18,0x06,0x5C,0x13,0x07,0x11,0x18,0x06,0x5C,0x13,0x07,0x0E,0x20,0x06,0x44,0x19}},
    //page0
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x00}},
    //SOE Always ON
    {REGFLAG_CMD, 2, {0xC3,0x04}},
    //page1
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x01}},
    //VGL Charge Bump Frequence:HS/4
    {REGFLAG_CMD, 2, {0x6F,0x03}},
    {REGFLAG_CMD, 4, {0xB3,0x55,0x55,0x55}},
        //crosstalk
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x08}},
    {REGFLAG_CMD, 2, {0xBF,0x21}},
    {REGFLAG_CMD, 2, {0x6F,0x01}},
    {REGFLAG_CMD, 2, {0xBF,0x88}},
    {REGFLAG_CMD, 2, {0x6F,0x02}},
    {REGFLAG_CMD, 2, {0xBF,0x0A}},
    {REGFLAG_CMD, 2, {0x6F,0x03}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x1E,0x28,0x4E,0x78,0x9C,0xCE,0xE0,0xF8}},
    {REGFLAG_CMD, 2, {0x6F,0x0C}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x00,0x08,0x08,0x0C,0x10,0x14,0x18}},
    {REGFLAG_CMD, 2, {0x6F,0x14}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x03,0x0C,0x10,0x14,0x18,0x1C,0x20}},
    {REGFLAG_CMD, 2, {0x6F,0x1C}},
    {REGFLAG_CMD, 9, {0xBF,0x92,0x9F,0x98,0x98,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x24}},
    {REGFLAG_CMD, 9, {0xBF,0x8A,0xAA,0x8A,0x8A,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x2C}},
    {REGFLAG_CMD, 12, {0xBF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0x37}},
    {REGFLAG_CMD, 12, {0xBF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x30}},
    {REGFLAG_CMD, 2, {0x6F,0x42}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x4A}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x52}},
    {REGFLAG_CMD, 5, {0xBF,0x40,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0x56}},
    {REGFLAG_CMD, 4, {0xBF,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0x59}},
    {REGFLAG_CMD, 3, {0xBF,0x00,0x20}},
    {REGFLAG_CMD, 2, {0x6F,0x5B}},
    {REGFLAG_CMD, 2, {0xBF,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x5C}},
    {REGFLAG_CMD, 10, {0xBF,0x80,0x37,0x41,0x47,0x58,0x71,0x95,0xC2,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x65}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x01,0x03,0x07,0x0F,0x1F,0x3F,0x7F,0xFF}},
    {REGFLAG_CMD, 2, {0x6F,0x72}},
    {REGFLAG_CMD, 2, {0xBF,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x73}},
    {REGFLAG_CMD, 17, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x83}},
    {REGFLAG_CMD, 2, {0xBF,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x84}},
    {REGFLAG_CMD, 7, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x8A}},
    {REGFLAG_CMD, 7, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x90}},
    {REGFLAG_CMD, 3, {0xBF,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0x92}},
    {REGFLAG_CMD, 7, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x98}},
    {REGFLAG_CMD, 6, {0xBF,0x20,0x20,0x20,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x9D}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x14,0x20,0x32,0x40,0x4A,0x54,0x5C,0x5C}},
    {REGFLAG_CMD, 2, {0x6F,0xA6}},
    {REGFLAG_CMD, 3, {0xBF,0x02,0x02}},
    {REGFLAG_CMD, 2, {0x6F,0xA8}},
    {REGFLAG_CMD, 5, {0xBF,0x01,0x20,0x40,0x03}},
    {REGFLAG_CMD, 2, {0x6F,0xAC}},
    {REGFLAG_CMD, 2, {0xBF,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0xAE}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x20,0x40,0x60,0x80,0xA0,0xC0,0xE0,0xF0}},
    {REGFLAG_CMD, 2, {0x6F,0xB7}},
    {REGFLAG_CMD, 2, {0xBF,0x11}},
    {REGFLAG_CMD, 2, {0x6F,0xB8}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x01,0x20,0x40,0x60,0x80,0xA0,0xC0,0xE0}},
    {REGFLAG_CMD, 2, {0x6F,0xC1}},
    {REGFLAG_CMD, 9, {0xBF,0x14,0x14,0x12,0x10,0x0E,0x0C,0x0A,0x08}},
    {REGFLAG_CMD, 2, {0x6F,0xC9}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0xD1}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A}},
    {REGFLAG_CMD, 2, {0x6F,0xDA}},
    {REGFLAG_CMD, 12, {0xBF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0xE5}},
    {REGFLAG_CMD, 12, {0xBF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0xF0}},
    {REGFLAG_CMD, 5, {0xBF,0x40,0x40,0x40,0x40}},
     //DVDD Strong=1V
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x01}},
    {REGFLAG_CMD, 2, {0x6F,0x03}},
    {REGFLAG_CMD, 4, {0xC5,0x00,0x25,0x25}},
    //OSC START
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x31}},
    {REGFLAG_CMD, 3, {0xF8,0x01,0xB9}},
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x15}},
    {REGFLAG_CMD, 3, {0xF8,0x01,0x8C}},
    //OSC END
    {REGFLAG_CMD, 2, {0x5A,0x01}},
    //DDICinternalsetting
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x0A}},
    //POWER on/off sequence optimize
    {REGFLAG_CMD, 6, {0xF6,0x70,0x70,0x70,0x70,0x70}},
    //TE_opt
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x81}},
    {REGFLAG_CMD, 2, {0x6F,0x0D}},
    {REGFLAG_CMD, 2, {0xFB,0x80}},
    //forEM_DT=0condition
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x01}},
    {REGFLAG_CMD, 2, {0xE5,0x00}},
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x81}},
    {REGFLAG_CMD, 2, {0x6F,0x0C}},
    //enable fskip_extend vfp function
    {REGFLAG_CMD, 2, {0xFD,0x08}},
    {REGFLAG_CMD, 2, {0x6F,0x02}},
    //AOD_Wb timing Optimize
    {REGFLAG_CMD, 2, {0xF9,0x84}},
    {REGFLAG_CMD, 2, {0x6F,0x10}},
    //chopper at skip timing adjust
    {REGFLAG_CMD, 2, {0xFB,0x40}},
    //LVDETSkipframe option
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x48}},
    {REGFLAG_CMD, 2, {0xF2,0x00}},
    //source driving optimize
    {REGFLAG_CMD, 2, {0x6F,0x16}},
    {REGFLAG_CMD, 3, {0xF4,0x02,0x74}},
    //for powersaving option
    {REGFLAG_CMD, 2, {0x6F,0x42}},
    {REGFLAG_CMD, 2, {0xF4,0x00}},
    //for powersaving option
    {REGFLAG_CMD, 2, {0x6F,0x49}},
    {REGFLAG_CMD, 2, {0xF2,0x10}},
    //source vporch optimize
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x81}},
    {REGFLAG_CMD, 2, {0x6F,0x05}},
    {REGFLAG_CMD, 3, {0xFE,0x3C,0x3C}},
    //mipi timing
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x82}},
    {REGFLAG_CMD, 2, {0x6F,0x09}},
    {REGFLAG_CMD, 2, {0xF2,0xFF}},
    //MTP optimize
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x04}},
    {REGFLAG_CMD, 2, {0xF2,0x3C}},
    //RM=1,DM=0
    {REGFLAG_CMD, 2, {0x17,0x30}},
    //频率切换 90Hz
    {REGFLAG_CMD, 2, {0x2F,0x02}},
    //GIRONLIRONAPLAutoSwitchOFF
    {REGFLAG_CMD, 3, {0x5F,0x00,0x00}},
    //TEOn
    {REGFLAG_CMD, 2, {0x35,0x00}},
    //normal dbv
    //{REGFLAG_CMD, 3, {0x51,0x0D,0x0B}},
    //{REGFLAG_CMD, 2, {0x6F,0x04}},
    //{REGFLAG_CMD, 3, {0x51,0x03,0xFF}},
    //BCTRL=1,DD=0
    {REGFLAG_CMD, 2, {0x53,0x20}},
    {REGFLAG_CMD, 5, {0x2A,0x00,0x00,0x04,0xF7}},
    {REGFLAG_CMD, 5, {0x2B,0x00,0x00,0x0A,0xEF}},
    //corner on
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x07}},
    {REGFLAG_CMD, 2, {0xC0,0x27}},
    //DSC
    {REGFLAG_CMD, 3, {0x90,0x03,0x43}},
    {REGFLAG_CMD, 19, {0x91,0xAB,0xA8,0x00,0x10,0xC2,0x00,0x02,0x3E,0x01,0xA3,0x00,0x08,0x06,0x67,0x05,0x66,0x10,0xF0}},
    //GC=1
    {REGFLAG_CMD, 2, {0x26,0x00}},
    //Page 8
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x08}},
    {REGFLAG_CMD, 2, {0xBE,0x03}},
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x81}},
    {REGFLAG_CMD, 2, {0x6F,0x0B}},
    {REGFLAG_CMD, 2, {0xFD,0x04}},
    //lhbm mode control begin
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x02}},
    {REGFLAG_CMD, 7, {0xD1,0x26,0xFC,0x23,0x8A,0x2D,0x64}},
    {REGFLAG_CMD, 10, {0x88,0x01,0x02,0x7C,0x09,0xF1,0x00,0x00,0x00,0x00}},
    //lhbm mode control end
    //ir drop
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x08}},
    {REGFLAG_CMD, 7, {0xB0,0x11,0x05,0x35,0x19,0x20,0x20}},
    {REGFLAG_CMD, 2, {0x6F,0x07}},
    {REGFLAG_CMD, 8, {0xB0,0x10,0xDC,0x5E,0x32,0x14,0x6E,0xF3}},
    {REGFLAG_CMD, 2, {0x6F,0x0E}},
    {REGFLAG_CMD, 8, {0xB0,0xB6,0xFF,0x20,0x00,0x00,0xE3,0xBF}},
    {REGFLAG_CMD, 2, {0x6F,0x15}},
    {REGFLAG_CMD, 8, {0xB0,0xF0,0xFE,0xF0,0xFF,0x01,0xFA,0x16}},
    {REGFLAG_CMD, 2, {0x6F,0x1C}},
    {REGFLAG_CMD, 5, {0xB0,0xBF,0x80,0xF2,0x17}},
    {REGFLAG_CMD, 1, {0x11}},
    {REGFLAG_DELAY, 120, {} },
    {REGFLAG_CMD, 1, {0x29}},
};

struct LCM_setting_table init_setting_120Hz[] = {
    //osc
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x01}},
    {REGFLAG_CMD, 42, {0xC3,0xDD,0x06,0x20,0x11,0xFF,0x00,0x06,0x20,0x11,0xFF,0x00,0x07,0x0E,0x20,0x06,0x44,0x19,0x07,0x04,0x18,
                       0x06,0x51,0x13,0x07,0x11,0x18,0x06,0x5C,0x13,0x07,0x11,0x18,0x06,0x5C,0x13,0x07,0x0E,0x20,0x06,0x44,0x19}},
    //page0
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x00}},
    //SOE Always ON
    {REGFLAG_CMD, 2, {0xC3,0x04}},
    //page1
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x01}},
    //VGL Charge Bump Frequence:HS/4
    {REGFLAG_CMD, 2, {0x6F,0x03}},
    {REGFLAG_CMD, 4, {0xB3,0x55,0x55,0x55}},
    //crosstalk
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x08}},
    {REGFLAG_CMD, 2, {0xBF,0x21}},
    {REGFLAG_CMD, 2, {0x6F,0x01}},
    {REGFLAG_CMD, 2, {0xBF,0x88}},
    {REGFLAG_CMD, 2, {0x6F,0x02}},
    {REGFLAG_CMD, 2, {0xBF,0x0A}},
    {REGFLAG_CMD, 2, {0x6F,0x03}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x1E,0x28,0x4E,0x78,0x9C,0xCE,0xE0,0xF8}},
    {REGFLAG_CMD, 2, {0x6F,0x0C}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x00,0x08,0x08,0x0C,0x10,0x14,0x18}},
    {REGFLAG_CMD, 2, {0x6F,0x14}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x03,0x0C,0x10,0x14,0x18,0x1C,0x20}},
    {REGFLAG_CMD, 2, {0x6F,0x1C}},
    {REGFLAG_CMD, 9, {0xBF,0x92,0x9F,0x98,0x98,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x24}},
    {REGFLAG_CMD, 9, {0xBF,0x8A,0xAA,0x8A,0x8A,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x2C}},
    {REGFLAG_CMD, 12, {0xBF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0x37}},
    {REGFLAG_CMD, 12, {0xBF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x30}},
    {REGFLAG_CMD, 2, {0x6F,0x42}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x4A}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x52}},
    {REGFLAG_CMD, 5, {0xBF,0x40,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0x56}},
    {REGFLAG_CMD, 4, {0xBF,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0x59}},
    {REGFLAG_CMD, 3, {0xBF,0x00,0x20}},
    {REGFLAG_CMD, 2, {0x6F,0x5B}},
    {REGFLAG_CMD, 2, {0xBF,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x5C}},
    {REGFLAG_CMD, 10, {0xBF,0x80,0x37,0x41,0x47,0x58,0x71,0x95,0xC2,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x65}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x01,0x03,0x07,0x0F,0x1F,0x3F,0x7F,0xFF}},
    {REGFLAG_CMD, 2, {0x6F,0x72}},
    {REGFLAG_CMD, 2, {0xBF,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x73}},
    {REGFLAG_CMD, 17, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x83}},
    {REGFLAG_CMD, 2, {0xBF,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x84}},
    {REGFLAG_CMD, 7, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x8A}},
    {REGFLAG_CMD, 7, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x90}},
    {REGFLAG_CMD, 3, {0xBF,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0x92}},
    {REGFLAG_CMD, 7, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x98}},
    {REGFLAG_CMD, 6, {0xBF,0x20,0x20,0x20,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0x9D}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x14,0x20,0x32,0x40,0x4A,0x54,0x5C,0x5C}},
    {REGFLAG_CMD, 2, {0x6F,0xA6}},
    {REGFLAG_CMD, 3, {0xBF,0x02,0x02}},
    {REGFLAG_CMD, 2, {0x6F,0xA8}},
    {REGFLAG_CMD, 5, {0xBF,0x01,0x20,0x40,0x03}},
    {REGFLAG_CMD, 2, {0x6F,0xAC}},
    {REGFLAG_CMD, 2, {0xBF,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0xAE}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x20,0x40,0x60,0x80,0xA0,0xC0,0xE0,0xF0}},
    {REGFLAG_CMD, 2, {0x6F,0xB7}},
    {REGFLAG_CMD, 2, {0xBF,0x11}},
    {REGFLAG_CMD, 2, {0x6F,0xB8}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x01,0x20,0x40,0x60,0x80,0xA0,0xC0,0xE0}},
    {REGFLAG_CMD, 2, {0x6F,0xC1}},
    {REGFLAG_CMD, 9, {0xBF,0x14,0x14,0x12,0x10,0x0E,0x0C,0x0A,0x08}},
    {REGFLAG_CMD, 2, {0x6F,0xC9}},
    {REGFLAG_CMD, 9, {0xBF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}},
    {REGFLAG_CMD, 2, {0x6F,0xD1}},
    {REGFLAG_CMD, 10, {0xBF,0x00,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A,0x0A}},
    {REGFLAG_CMD, 2, {0x6F,0xDA}},
    {REGFLAG_CMD, 12, {0xBF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0xE5}},
    {REGFLAG_CMD, 12, {0xBF,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x40}},
    {REGFLAG_CMD, 2, {0x6F,0xF0}},
    {REGFLAG_CMD, 5, {0xBF,0x40,0x40,0x40,0x40}},
     //DVDD Strong=1V
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x01}},
    {REGFLAG_CMD, 2, {0x6F,0x03}},
    {REGFLAG_CMD, 4, {0xC5,0x00,0x25,0x25}},
    //OSC START
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x31}},
    {REGFLAG_CMD, 3, {0xF8,0x01,0xB9}},
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x15}},
    {REGFLAG_CMD, 3, {0xF8,0x01,0x8C}},
    //OSC END
    {REGFLAG_CMD, 2, {0x5A,0x01}},
    //DDICinternalsetting
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x0A}},
    //POWER on/off sequence optimize
    {REGFLAG_CMD, 6, {0xF6,0x70,0x70,0x70,0x70,0x70}},
    //TE_opt
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x81}},
    {REGFLAG_CMD, 2, {0x6F,0x0D}},
    {REGFLAG_CMD, 2, {0xFB,0x80}},
    //forEM_DT=0condition
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x01}},
    {REGFLAG_CMD, 2, {0xE5,0x00}},
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x81}},
    {REGFLAG_CMD, 2, {0x6F,0x0C}},
    //enable fskip_extend vfp function
    {REGFLAG_CMD, 2, {0xFD,0x08}},
    {REGFLAG_CMD, 2, {0x6F,0x02}},
    //AOD_Wb timing Optimize
    {REGFLAG_CMD, 2, {0xF9,0x84}},
    {REGFLAG_CMD, 2, {0x6F,0x10}},
    //chopper at skip timing adjust
    {REGFLAG_CMD, 2, {0xFB,0x40}},
    //LVDETSkipframe option
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x48}},
    {REGFLAG_CMD, 2, {0xF2,0x00}},
    //source driving optimize
    {REGFLAG_CMD, 2, {0x6F,0x16}},
    {REGFLAG_CMD, 3, {0xF4,0x02,0x74}},
    //for powersaving option
    {REGFLAG_CMD, 2, {0x6F,0x42}},
    {REGFLAG_CMD, 2, {0xF4,0x00}},
    //for powersaving option
    {REGFLAG_CMD, 2, {0x6F,0x49}},
    {REGFLAG_CMD, 2, {0xF2,0x10}},
    //source vporch optimize
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x81}},
    {REGFLAG_CMD, 2, {0x6F,0x05}},
    {REGFLAG_CMD, 3, {0xFE,0x3C,0x3C}},
    //mipi timing
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x82}},
    {REGFLAG_CMD, 2, {0x6F,0x09}},
    {REGFLAG_CMD, 2, {0xF2,0xFF}},
    //MTP optimize
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x80}},
    {REGFLAG_CMD, 2, {0x6F,0x04}},
    {REGFLAG_CMD, 2, {0xF2,0x3C}},
    //RM=1,DM=0
    {REGFLAG_CMD, 2, {0x17,0x30}},
    //频率切换 120Hz
    {REGFLAG_CMD, 2, {0x2F,0x01}},
    //GIRONLIRONAPLAutoSwitchOFF
    {REGFLAG_CMD, 3, {0x5F,0x00,0x00}},
    //TEOn
    {REGFLAG_CMD, 2, {0x35,0x00}},
    //normal dbv
    //{REGFLAG_CMD, 3, {0x51,0x0D,0x0B}},
    //{REGFLAG_CMD, 2, {0x6F,0x04}},
    //{REGFLAG_CMD, 3, {0x51,0x03,0xFF}},
    //BCTRL=1,DD=0
    {REGFLAG_CMD, 2, {0x53,0x20}},
    {REGFLAG_CMD, 5, {0x2A,0x00,0x00,0x04,0xF7}},
    {REGFLAG_CMD, 5, {0x2B,0x00,0x00,0x0A,0xEF}},
    //corner on
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x07}},
    {REGFLAG_CMD, 2, {0xC0,0x27}},
    //DSC
    {REGFLAG_CMD, 3, {0x90,0x03,0x43}},
    {REGFLAG_CMD, 19, {0x91,0xAB,0xA8,0x00,0x10,0xC2,0x00,0x02,0x3E,0x01,0xA3,0x00,0x08,0x06,0x67,0x05,0x66,0x10,0xF0}},
    //GC=1
    {REGFLAG_CMD, 2, {0x26,0x00}},
    //Page 8
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x08}},
    {REGFLAG_CMD, 2, {0xBE,0x03}},
    {REGFLAG_CMD, 5, {0xFF,0xAA,0x55,0xA5,0x81}},
    {REGFLAG_CMD, 2, {0x6F,0x0B}},
    {REGFLAG_CMD, 2, {0xFD,0x04}},
    //lhbm mode control begin
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x02}},
    {REGFLAG_CMD, 7, {0xD1,0x26,0xFC,0x23,0x8A,0x2D,0x64}},
    {REGFLAG_CMD, 10, {0x88,0x01,0x02,0x7C,0x09,0xF1,0x00,0x00,0x00,0x00}},
    //lhbm mode control end
    //ir drop
    {REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x08}},
    {REGFLAG_CMD, 7, {0xB0,0x11,0x05,0x35,0x19,0x20,0x20}},
    {REGFLAG_CMD, 2, {0x6F,0x07}},
    {REGFLAG_CMD, 8, {0xB0,0x10,0xDC,0x5E,0x32,0x14,0x6E,0xF3}},
    {REGFLAG_CMD, 2, {0x6F,0x0E}},
    {REGFLAG_CMD, 8, {0xB0,0xB6,0xFF,0x20,0x00,0x00,0xE3,0xBF}},
    {REGFLAG_CMD, 2, {0x6F,0x15}},
    {REGFLAG_CMD, 8, {0xB0,0xF0,0xFE,0xF0,0xFF,0x01,0xFA,0x16}},
    {REGFLAG_CMD, 2, {0x6F,0x1C}},
    {REGFLAG_CMD, 5, {0xB0,0xBF,0x80,0xF2,0x17}},
    {REGFLAG_CMD, 1, {0x11}},
    {REGFLAG_DELAY, 120, {} },
    {REGFLAG_CMD, 1, {0x29}},
};
/* ------------------------- initial code end------------------------- */

/* -------------------------demura setting start---------------------- */
static struct LCM_setting_table dsi_demura0_bl[] = {
    /* demura0 level < 0x521 */
    {REGFLAG_CMD, 6, {0xF0, 0x55, 0xAA, 0x52, 0x08, 0x00}},
    {REGFLAG_CMD, 2, {0x6F, 0x31}},
    {REGFLAG_CMD, 3, {0xC0, 0x01, 0x20}},
    {REGFLAG_CMD, 2, {0x6F, 0x33}},
    {REGFLAG_CMD, 4, {0xC0, 0x03, 0x33, 0x00}},
    {REGFLAG_CMD, 6, {0xF0, 0x55, 0xAA, 0x52, 0x08, 0x04}},
    {REGFLAG_CMD, 2, {0x6F, 0x01}},
    {REGFLAG_CMD, 6, {0xCB, 0x08, 0x10, 0x1E, 0x78, 0xE1}},
    {REGFLAG_CMD, 2, {0x6F, 0x06}},
    {REGFLAG_CMD, 10, {0xCB, 0x01, 0x08, 0x09, 0x12, 0xA5, 0x70, 0x35, 0x70, 0x21}},
};

static struct LCM_setting_table dsi_demura1_bl[] = {
    /* demura1 0x521 <= level < 0xffe */
    {REGFLAG_CMD, 6, {0xF0, 0x55, 0xAA, 0x52, 0x08, 0x00}},
    {REGFLAG_CMD, 2, {0x6F, 0x31}},
    {REGFLAG_CMD, 3, {0xC0, 0x67, 0x80}},
    {REGFLAG_CMD, 2, {0x6F, 0x33}},
    {REGFLAG_CMD, 4, {0xC0, 0x04, 0x44, 0x00}},
    {REGFLAG_CMD, 6, {0xF0, 0x55, 0xAA, 0x52, 0x08, 0x04}},
    {REGFLAG_CMD, 2, {0x6F, 0x01}},
    {REGFLAG_CMD, 6, {0xCB, 0x03, 0x08, 0x1E, 0x78, 0xE1}},
    {REGFLAG_CMD, 2, {0x6F, 0x06}},
    {REGFLAG_CMD, 10, {0xCB, 0x57, 0x22, 0x4B, 0x8D, 0x52, 0xBB, 0xEF, 0x7C, 0xFE}},
};
/* -------------------------demura setting end------------------------- */

#ifdef OPLUS_FEATURE_DISPLAY_ONSCREENFINGERPRINT
/* aod/fod command */
struct LCM_setting_table aod_on_cmd[] = {
	/* AOD Mode ON */
	{REGFLAG_CMD, 1, {0x39}},
	{REGFLAG_CMD, 2, {0x6F,0x04}},
	{REGFLAG_CMD, 3, {0x51,0x03,0xFF}},
};

struct LCM_setting_table aod_off_cmd[] = {
	{REGFLAG_CMD, 1, {0x38}},
};

struct LCM_setting_table aod_high_mode[] = {
	{REGFLAG_CMD, 2, {0x6F,0x04}},
	{REGFLAG_CMD, 3, {0x51,0x03,0xFF}},
};

struct LCM_setting_table aod_low_mode[] = {
	{REGFLAG_CMD, 2, {0x6F,0x04}},
	{REGFLAG_CMD, 3, {0x51,0x01,0xFF}},
};

struct LCM_setting_table hbm_on_cmd[] = {
	{REGFLAG_CMD, 3, {0x51,0x0F,0x70}},
};

struct LCM_setting_table hbm_off_cmd[] = {
	{REGFLAG_CMD, 3, {0x51,0x0D,0xBB}},
};

struct LCM_setting_table lhbm_pressed_icon_gamma_cmd[] = {
};

struct LCM_setting_table lhbm_pressed_icon_grayscale_cmd[] = {
	{REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x08}},
	{REGFLAG_CMD, 2, {0x6F,0x4A}},
	{REGFLAG_CMD, 5, {0xB8,0x00,0x00,0x00,0x00}},
};

struct LCM_setting_table lhbm_pressed_icon_on_cmd_dc[] = {
	{REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x08}},
	{REGFLAG_CMD, 2, {0x6F,0x4A}},
	{REGFLAG_CMD, 13, {0xA9,0x02,0x00,0xDF,0x31,0x31,0x06,0x01,0x00,0x87,0x00,0x00,0x05}},
	{REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x04}},
	{REGFLAG_CMD, 2, {0xCB,0x36}},
	{REGFLAG_CMD, 2, {0x8B,0x10}},
};

struct LCM_setting_table lhbm_pressed_icon_on_cmd_pwm[] = {
	{REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x08}},
	{REGFLAG_CMD, 2, {0x6F,0x4A}},
	{REGFLAG_CMD, 13, {0xA9,0x02,0x00,0xDF,0x31,0x31,0x16,0x01,0x00,0x87,0x00,0x00,0x25}},
	{REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x04}},
	{REGFLAG_CMD, 2, {0xCB,0x36}},
	{REGFLAG_CMD, 2, {0x8B,0x10}},
};

struct LCM_setting_table lhbm_pressed_icon_off_cmd[] = {
	{REGFLAG_CMD, 2, {0x87,0x20}},
	{REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x04}},
	{REGFLAG_CMD, 2, {0xCB,0x36}},
	{REGFLAG_CMD, 2, {0x8B,0x00}},
};

static struct LCM_setting_table gamma_compensation[] = {
    {REGFLAG_CMD, 6, {0xF0, 0x55, 0xAA, 0x52, 0x08, 0x02}},
    {REGFLAG_CMD, 7, {0xD1, 0x24, 0xFF, 0x22, 0x00, 0x29, 0xFF}},
};
#endif /* OPLUS_FEATURE_DISPLAY_ONSCREENFINGERPRINT */

struct LCM_setting_table mode_switch_to_60[] = {
    {REGFLAG_CMD, 2, {0x2F,0x03}},
};

struct LCM_setting_table mode_switch_to_90[] = {
    {REGFLAG_CMD, 2, {0x2F,0x02}},
};

struct LCM_setting_table mode_switch_to_120[] = {
    {REGFLAG_CMD, 2, {0x2F,0x01}},
};

struct LCM_setting_table dsi_set_backlight[] = {
	{REGFLAG_CMD, 4, {0xFF,0x5A,0xA5,0x00}},
	{REGFLAG_CMD, 3, {0x51,0x00,0x00}},
	/*long write EOT to the end*/
	{REGFLAG_CMD, 3,  {0x00,0x00,0x00}},
};

/* ---------------panel seed setting --------------- */
struct LCM_setting_table dsi_set_seed_natural[] = {
	{REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x00}},
	{REGFLAG_CMD, 2, {0x5F,0x04}},
};

struct LCM_setting_table dsi_set_seed_expert[] = {
	{REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x00}},
	{REGFLAG_CMD, 2, {0x5F,0x00}},
};

struct LCM_setting_table dsi_set_seed_vivid[] = {
	{REGFLAG_CMD, 6, {0xF0,0x55,0xAA,0x52,0x08,0x00}},
	{REGFLAG_CMD, 2, {0x5F,0x05}},
};

struct LCM_setting_table dsi_switch_hbm_apl_on[] = {

};

struct LCM_setting_table dsi_switch_hbm_apl_off[] = {

};
#endif
